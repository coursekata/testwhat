% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check-code.R
\name{check_code}
\alias{check_code}
\title{Test the student's code as text}
\usage{
check_code(
  state,
  regex,
  fixed = FALSE,
  times = 1,
  missing_msg = NULL,
  append = TRUE,
  drop_comments = FALSE
)
}
\arguments{
\item{state}{the state to start from}

\item{regex}{A set of strings/regexes that should be in the student code.}

\item{fixed}{if TRUE, strings are treated literally. If FALSE, strings are
treated as regex patterns.}

\item{times}{how often should any of the strings be matched?}

\item{missing_msg}{Custom feedback in case the pattern is not contained often
enough in the student's submission.}

\item{append}{Whether or not to append the feedback to feedback built in
previous states}

\item{drop_comments}{Logical value indicating whether or not to remove
comments from these student code before looking for the pattern. Defaults
to FALSE for backwards compatibility reasons.}
}
\description{
Some rudimentary string cleaning is performed to allow for different ways of
saying the same things (removing spaces, changing single quotes to double
quotes, changing TRUE to T ...).
}
\details{
Using these function should be a last resort, as there are myriad ways of
solving the same problem with R!
}
\examples{
\dontrun{
# Example 1
TRUE & FALSE

# SCT
ex() \%>\% check_code(c("TRUE & FALSE", "FALSE & TRUE"), fixed = TRUE)

# Example 2:
"Hello, world!"

# SCT, robust to small typos
ex() \%>\% check_code("[H|h]ello,*\\\\s*[W|w]orld\\\\!*")
}

}
