% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/check-output.R
\name{check_output}
\alias{check_output}
\alias{check_output.default}
\alias{check_output_expr}
\title{Check whether the student printed something to the console}
\usage{
check_output(state, ...)

\method{check_output}{default}(
  state,
  regex,
  fixed = FALSE,
  trim = FALSE,
  times = 1,
  output_only = FALSE,
  missing_msg = NULL,
  append = TRUE,
  ...
)

check_output_expr(state, expr, times = 1, missing_msg = NULL, append = TRUE)
}
\arguments{
\item{state}{the state to start from}

\item{...}{S3 stuff}

\item{regex}{the regular expression or pattern to look for}

\item{fixed}{if fixed is TRUE, \code{regex} will be sought for 'as is' in the
output, if fixed = FALSE (the default), \code{regex} will be treated as
actual regular expression.}

\item{trim}{should the student output be trimmed, so that all newlines and
spaces are removed, before checking?}

\item{times}{how often should the pattern/expression output be found?}

\item{output_only}{Consider only regular output, or also messages, warnings
and error? \code{FALSE} by default for \code{check_output} (so it considers
all kinds of output). You cannot specify this argument for
\code{check_output_expr} and \code{test_output_contains}.}

\item{missing_msg}{Custom message in case the pattern or output wasn't found
often enough.}

\item{append}{Whether or not to append the feedback to feedback built in
previous states}

\item{expr}{The expression (as string) for which the output should be in the
student's console output.}
}
\description{
Check the output of the submission to see if it contains certain elements.
}
\details{
With \code{check_output}, you can simply specify a regular expression or
pattern (depending on the value of \code{fixed}) that is looked for in the
student's output. By default, regular output, messages, warnings and errors
are considered.

With \code{test_output_contains} and \code{check_output_expr} you can pass an
expression, that is executed in the student environment, and whose output is 
compared to the output the student generated. If the generated output is found
in the student's output, the check passes. By default, only regular output is
considered.
}
\examples{
\dontrun{
# Example 1
mtcars

# SCT
ex() \%>\% check_output_expr("mtcars")

# Example 2
print("hello!")

# SCT (robust)
ex() \%>\% check_output("[H|h]ello\\\\!*")
}

}
